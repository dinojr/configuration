;;~/.emacs -*- mode: lisp-*-

;;--------------------
;; Customize
;;--------------------
(setq inhibit-startup-screen t)
(global-font-lock-mode)

;; (custom-set-faces
;;  ;; custom-set-faces was added by Custom.
;;  ;; If you edit it by hand, you could mess it up, so be careful.
;;  ;; Your init file should contain only one such instance.
;;  ;; If there is more than one, they won't work right.
;;  '(font-latex-math-face ((((class color) (background dark)) (:foreground "#ad7fa8"))))
;;  '(org-headline-done ((((class color) (min-colors 16) (background dark)) (:foreground "LightSalmon" :strike-through t)))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-math-abbrev-prefix [249])
 '(TeX-engine 'luatex)
 '(ace-isearch-function 'avy-goto-word-1)
 '(ace-isearch-input-length 5)
 '(ace-isearch-jump-delay 0.25)
 '(ace-isearch-use-jump 'printing-char)
 '(beacon-color "#ff79c6")
 '(canlock-password "5052bb55e61c64dae5204c0ccac4d417b05d8cf8")
 '(custom-safe-themes
   '("b0fd04a1b4b614840073a82a53e88fe2abc3d731462d6fde4e541807825af342" "43c808b039893c885bdeec885b4f7572141bd9392da7f0bd8d8346e02b2ec8da" "c0dc50b8b69b5fa91e65f5370b9605ced947db9d05e84552b4d31586e3874be8" "e23658d315acf2744418f199019b09d0522285c100f1772bdd948f3e5a287e61" "506a18c9dcffa6a7e70635a99e3b55c40595dc2561bced63a9023b2c148cc813" "218bc69ef19fd1f681cdded7b85924e41242fe87a6033df823499822f1397f1a" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" default))
 '(font-latex-fontify-sectioning 'color)
 '(font-latex-quotes 'french)
 '(helm-completion-style 'emacs)
 '(helm-external-programs-associations
   '(("xopp" . "xournalpp")
     ("agr" . "xmgrace")
     ("7z" . "file-roller")
     ("sciprj" . "scidavis")
     ("odt" . "libreoffice")
     ("avi" . "mpv")
     ("jpg" . "eog")
     ("m4v" . "mpv")
     ("mkv" . "mpv")
     ("mp4" . "mpv")
     ("xls" . "libreoffice")
     ("xlsx" . "libreoffice")
     ("qti" . "qtiplot")
     ("zip" . "file-roller")
     ("pdf" . "evince")
     ("ods" . "libreoffice")))
 '(helm-source-names-using-follow '("RG" "Occur"))
 '(notmuch-saved-searches
   '((:name "inbox" :query "tag:inbox" :key "i")
     (:name "unread" :query "tag:unread" :key "u")
     (:name "flagged" :query "tag:flagged" :key "f")
     (:name "sent" :query "tag:sent" :key "t")
     (:name "drafts" :query "tag:draft" :key "d")
     (:name "all mail" :query "*" :key "a")
     (:name "pending-tagging" :query "(not path:News/agent/nntp/**) and (not folder:Maildir/Free/Commercial) and (not folder:\"Mail/Free/Réseaux Sociaux\") and not folder:Local/junk and (not path:Maildir/Gmail/Categories/**) and date:30days.. and (not from:ebay) and (not from:Facebook) and tag:new" :key "g" :search-type tree)))
 '(org-archive-save-context-info '(itags ltags))
 '(org-format-latex-options
   '(:foreground default :background default :scale 2.0 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers
		 ("begin" "$1" "$" "$$" "\\(" "\\[")))
 '(org-list-allow-alphabetical t)
 '(package-selected-packages
   '(company-emoji company-reftex emojify org-drill helm-org perspective doom-modeline helm-dash helm-flymake helm-flyspell helm-org-rifle helm-xref doom-themes ztree orgit bug-hunter podcaster highlight-indent-guides eyebrowse yasnippet-snippets yaml-mode xpm wttrin worf w3m use-package unison-mode unison twittering-mode tabbar sx swiper-helm spaceline smartparens smart-mode-line rainbow-mode rainbow-delimiters pyvenv pinentry paredit paradox org-review org-ref org-pdfview org-easy-img-insert org-download org-caldav offlineimap oauth2 notify moody minions mingus memory-usage major-mode-icons magithub magit-filenotify lispy linum-relative latex-extra keychain-environment ivy-todo ivy-rich ivy-mpdel ivy-dired-history ivy-bibtex helm-notmuch helm-flycheck helm-flx helm-ext helm-emms helm-describe-modes helm-descbinds helm-company helm-bind-key helm-bbdb helm-ag google-maps gnuplot-mode gnuplot gh free-keys font-lock+ flyspell-lazy flyspell-correct-ivy flyspell-correct-helm flymake-yaml expand-region exec-path-from-shell eww-lnum emms-mode-line-cycle emms-info-mediainfo easy-kill dired-toggle-sudo counsel-tramp counsel-notmuch counsel-gtags counsel-etags counsel-bbdb company-math company-auctex calfw-gcal calfw boxquote bitlbee beacon bbdb2erc bbdb-vcard bbdb-ext bbdb- autopair auto-dictionary auctex-latexmk anzu all-the-icons-ivy all-the-icons-gnus all-the-icons-dired ace-jump-mode ace-jump-helm-line ace-flyspell multi-line zenburn-theme wajig use-package-chords org-notebook md4rd helm-eww guru-mode google-this gnus-alias emacs-xkcd diminish csv-mode counsel-ebdb company-php cdlatex calfw-org calfw-ical calfw-cal auto-yasnippet auto-overlays anaphora ace-link ace-isearch))
 '(paradox-automatically-star nil)
 '(paradox-github-token t)
 '(reftex-toc-include-labels t)
 '(reftex-toc-split-windows-horizontally t)
 '(safe-local-variable-values
   '((TeX-PDF-from-DVI . Dvips)
     (org-download-image-dir . "./Resources/"))))

;;--------------------
;; Customize end
;;--------------------

(add-to-list 'load-path "~/configuration/elisp/")

(load "JCpackages.el")
(load "JCgpg.el")
(load "JCkeychain.el")
(load "JCflycheck.el")
(load "JClpr.el")
(load "JCnavigation.el")
(load "JCparenthesis.el")
(load "JCwindows.el")
(load "JCspellcheck.el")
(load "JCtramp.el")
(load "JCanzu.el") ; à charger *avant* spaceline
;; (load "JCido.el")
(load "JCcompany.el")
(load "JCorg.el")
(load "JChelm.el")
;; (load "JCminions-moody.el")
(load "JCmodeline.el")
;; (load "JCspaceline.el")
(load "JCdired.el")
(load "JCyasnippet.el")
;; (load "JCdiary.el")
(load "JCcalendrier.el")
(load "JCregexps.el")
(setq org-export-async-init-file "/home/wilk/configuration/elisp/org-export-async-init.el")
;; (load "JCorg-google.el")
(load "JCcalfw.el")
(load "JCorgcaldav.el")
(load "JClatex.el")
(load "JCConTeXt.el")
(load "JCbibliography.el")
(load "JCpdftools.el")
(load "JCgit.el")
;; (load "JCediff.el")
;; (load "JCbitlbee.el")
(load "JCgnus.el")
(load "JCofflineimap.el")
(load "JCnotmuch.el")
(load "JCbrowser.el")
(load "JCbbdb.el")
;; (load "JCnamazu.el")
(load "JCmingus.el")
;; (load "JCworkgroup.el")
;; (load "JCworkgroups2.el")
(load "JCdesktop")
;; (load "JCwww.el")
(load "JCregexps.el")
(load "JCcalfw.el")
(load "JCcalc.el")
(load "JCace-link.el")
;; (load "JCemms.el")
(load "JCavy.el")
(load "JCpython.el")
;; (load "JClilypond.el")
(load "JCunison.el")
(load "JCeshell.el")
(load "JClispy.el")
(load "JCgnuplot.el")
;; (load "JCasymptote.el")
(load "general_stuff.el")


;;(load "~/.emacs.d/emacs_server.el")
;; (when (daemonp)
;;   (require 'session-manager)
;;   (session-manager-init (daemonp)))
;; (load "~/.emacs.d/emacs_noninteractive.el")
;; (load "~/.emacs.d/emacs_interactive.el")


;;--------------------
;; Vestiges
;;--------------------
;; OrgContacts ;;

;; (add-to-list 'load-path "/home/wilk/info/emacs/org-mode/contrib/lisp")
;; (require 'org-contacts)
;; Pour l'instant, on reste avec googlecontacts
;; (setq org-contact-files "/home/wilk/org/orgfiles/contacts.org")
; Pour avoir gnus+yasnippet+contacts dans Emacs23, inutile dans
;; Emacs24 normalement
;; (defun set-yas/fallback-behavior ()
;;   (setq yas/fallback-behavior '(apply completion-at-point)))
;; (add-hook 'message-mode-hook 'set-yas/fallback-behavior)

;;GoogleContacts;;
;; PAssPhrase "standard du labo"
;; (add-to-list 'load-path "/home/wilk/.emacs.d/elpa/oauth2-0.1/")
;; (require 'oauth2)
;; (add-to-list 'load-path "/home/wilk/.emacs.d/google-contacts.el")
;; (require 'google-contacts)
;; (require 'google-contacts-gnus)
;; (require 'google-contacts-message)

;; BBDB stuff
;; (add-to-list 'load-path "/home/wilk/info/emacs/bbdb-2.36/lisp")
;; (add-to-list 'load-path "/home/wilk/info/emacs/bbdb-2.36/bits")
;; (add-to-list 'load-path "/home/wilk/info/emacs/bbdb/lisp")
;; (add-to-list 'load-path "/home/wilk/info/emacs/bbdb/bits")
;; (add-to-list 'Info-directory-list "~/info/emacs/bbdb/doc/")


;; pour sauver des configurations de windows, et les parcourir

;; (require 'winring)
;; ;; Note that by default, this binds the winring keymap to the C-x 7 prefix,
;; ;; but you can change this by setting the value of `winring-keymap-prefix',
;; ;; before you call `winring-initialize'.
;; (winring-initialize)
;; (setq winring-show-names t)

;; (add-to-list 'load-path "/home/wilk/.emacs.d/elpa/window-number-1.0.1/")
;; (autoload 'window-number-mode "window-number"
;;   "A global minor mode that enables selection of windows according to
;; numbers with the C-x C-j prefix.  Another mode,
;; `window-number-meta-mode' enables the use of the M- prefix."
;;   t)
;; (window-number-mode 1)

;; (autoload 'window-number-meta-mode "window-number"
;;   "A global minor mode that enables use of the M- prefix to select
;; windows, use `window-number-mode' to display the window numbers in
;; the mode-line."
;;   t)

;; (window-number-meta-mode 1)

;; (add-to-list 'load-path "/home/wilk/.emacs.d/elpa/boxquote-20081011.2126")


;; (if (not server-mode)
;;     (server-start)
;;   )
;;--------------------
;; Vestiges end
;;--------------------
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(put 'list-timers 'disabled nil)
